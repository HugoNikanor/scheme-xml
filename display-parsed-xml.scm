(define (output data)
  (define (display-list points)
    (if (not (null? points))
        (display "Something")
      (let ((point (car points))
            (rest (cdr points)))
        (display point)
        (for-each display (interspace #\space (cddr point)))
        (move-cursor-down 1)
        (display-list rest))))

  (define (inner line col data)
    (place-cursor line col)
    (if (not (null? data))
      (let ((tag (car data))
            (atr (cadr data))
            (rest (cddr data)))
        (cond
          ((eqv? tag 'h1)
           (place-cursor line (+ col 20))
           (for-each display (interspace #\space rest))
           (inner (+ line 2) col rest))
          ((eqv? tag 'ul)
           (display "ul")
           (display-list rest))
          (else
            (display tag)
            (map (lambda (x) (inner line col x)) rest))))))
  (clear-screen)
  (inner 1 1 data))
